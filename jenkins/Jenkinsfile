pipeline {
	agent any
		options {
			// This is required if you want to clean before build
			skipDefaultCheckout(true)
			timestamps () 
	}
	environment {
		EXAMPLE_CREDS = credentials('GitHub')
	}
	stages {
			// stage('Example') {
			//     steps {
			//         /* WRONG! */
			//         bat("curl -u ${EXAMPLE_CREDS_USR}:${EXAMPLE_CREDS_PSW} https://github.com/bikarnap/something_nothing")
			//     }
			// }
			stage('Clone repo') {
				steps {
					sh('git clone git@github.com:bikarnap/something_nothing.git')
					sh('echo hello_txt > hello.txt')
				}
			}
			stage('archive') {
				steps {
					sh('tar -cvf archive.tar ./something_nothing/*.java')
					// bat 'echo hello'
				}
			}
	}
	post {
		// Clean after build
		always {
			archiveArtifacts artifacts: 'archive.*', fingerprint: true
			cleanWs(cleanWhenNotBuilt: true,
								deleteDirs: true,
								disableDeferredWipeout: true,
								notFailBuild: true,
								patterns: [[pattern: '.gitignore', type: 'INCLUDE'],
												[pattern: 'something_nothing/*', type: 'INCLUDE'],
												[pattern: '*', type: 'INCLUDE'],
												[pattern: '*.7z', type: 'EXCLUDE'],
												[pattern: '.propsfile', type: 'EXCLUDE']])
		}
	}
}
